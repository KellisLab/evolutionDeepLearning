library(ggpubr)
data <- read.csv("summary.overlaps.txt", header=FALSE, sep="\t")
head(data)
library(dplyr)
library(tidyr)
data <- data %>% select(c("V2", "V3", "V9", "V10", "V11"))
head(data)
colnames(data) <- c("Filename1", "Filename2", "Enrich", "pEnrich", "pDeplete")
data$log2Enrich <- log2(data$Enrich)
data$pAdj <- p.adjust(pmin(data$pEnrich, data$pDeplete))
head(data)
data$minusLogPAdj <- -log10(data$pAdj)
ggscatter(data, "log2Enrich", "minusLogPAdj", color="Filename2", label="Filename1")
parsed <- do.call(rbind, strsplit(as.character(data$Filename1), split = "\\."))
# Only keep the columns you care about (2 = pCutoff, 4 = direction, 5 = fcCutoff, 6 = padLength)
data_parsed <- data.frame(
pCutoff   = parsed[, 2],
direction = parsed[, 4],
fcCutoff  = parsed[, 5],
padLength = parsed[, 6],
stringsAsFactors = FALSE
)
# Optionally convert numeric columns
data_parsed$pCutoff   <- as.numeric(data_parsed$pCutoff)
data_parsed$fcCutoff  <- as.numeric(data_parsed$fcCutoff)
data_parsed$padLength <- as.integer(data_parsed$padLength)
head(data_parsed)
dim(data_parsed)
dim(data)
final_data <- cbind(data, data_parsed)
final_data
ggscatter(final_data, "padLength", "minusLogPAdj", color="log2Enrich", facet.by="direction")
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3)
final_data <-
ggscatter(final_data, "padLength", "minusLogPAdj", color="log2Enrich", facet.by="direction")
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3)
ggscatter(final_data, "padLength", "minusLogPAdj", color="log2Enrich", facet.by="direction")
data <- read.csv("summary.overlaps.txt", header=FALSE, sep="\t")
data <- data %>% select(c("V2", "V3", "V9", "V10", "V11"))
colnames(data) <- c("Filename1", "Filename2", "Enrich", "pEnrich", "pDeplete")
data$log2Enrich <- log2(data$Enrich)
parsed <- do.call(rbind, strsplit(as.character(data$Filename1), split = "\\."))
data_parsed <- data.frame(
pCutoff   = parsed[, 2],
direction = parsed[, 4],
fcCutoff  = parsed[, 5],
padLength = parsed[, 6],
stringsAsFactors = FALSE
)
data_parsed$pCutoff   <- as.numeric(data_parsed$pCutoff)
data_parsed$fcCutoff  <- as.numeric(data_parsed$fcCutoff)
data_parsed$padLength <- as.integer(data_parsed$padLength)
head(data_parsed)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggscatter(data, "log2Enrich", "minusLogPAdj", color="Filename2", label="Filename1")
ggscatter(final_data, "log2Enrich", "minusLogPAdj", color="Filename2", label="Filename1")
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 50000)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggscatter(final_data, "log2Enrich", "minusLogPAdj", color="Filename2", label="Filename1")
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 50000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggscatter(final_data, "log2Enrich", "minusLogPAdj", color="Filename2", label="Filename1")
final_data
ggballoonplot(final_data, x="Filename2", y="direction", color="log2Enrich", size="minusLogPAdj")
ggballoonplot(final_data, x="Filename2", y="direction", color="log2Enrich", size="minusLogPAdj") + theme_classic()
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") + theme_classic()
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
pdf("degBalloonPlot.pdf", height=4, width=5)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
dev.off()
pdf("degBalloonPlot.pdf", height=3, width=4)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
dev.off()
library(ggpubr)
library(dplyr)
library(tidyr)
data <- read.csv("summary.overlaps.txt", header=FALSE, sep="\t")
data <- data %>% select(c("V2", "V3", "V9", "V10", "V11"))
colnames(data) <- c("Filename1", "Filename2", "Enrich", "pEnrich", "pDeplete")
data$log2Enrich <- log2(data$Enrich)
parsed <- do.call(rbind, strsplit(as.character(data$Filename1), split = "\\."))
data_parsed <- data.frame(
pCutoff   = parsed[, 2],
direction = parsed[, 4],
fcCutoff  = parsed[, 5],
padLength = parsed[, 6],
stringsAsFactors = FALSE
)
data_parsed$pCutoff   <- as.numeric(data_parsed$pCutoff)
data_parsed$fcCutoff  <- as.numeric(data_parsed$fcCutoff)
data_parsed$padLength <- as.integer(data_parsed$padLength)
head(data_parsed)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 50000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggscatter(final_data, "log2Enrich", "minusLogPAdj", color="Filename2", label="Filename1")
ggscatter(final_data, "padLength", "minusLogPAdj", color="log2Enrich", facet.by="direction")
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 5000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggscatter(final_data, "log2Enrich", "minusLogPAdj", color="Filename2", label="Filename1")
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 50000 & fcCutoff == 2)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 50000 & fcCutoff == 2)
library(ggpubr)
library(dplyr)
library(tidyr)
data <- read.csv("summary.overlaps.txt", header=FALSE, sep="\t")
data <- data %>% select(c("V2", "V3", "V9", "V10", "V11"))
colnames(data) <- c("Filename1", "Filename2", "Enrich", "pEnrich", "pDeplete")
data$log2Enrich <- log2(data$Enrich)
parsed <- do.call(rbind, strsplit(as.character(data$Filename1), split = "\\."))
data_parsed <- data.frame(
pCutoff   = parsed[, 2],
direction = parsed[, 4],
fcCutoff  = parsed[, 5],
padLength = parsed[, 6],
stringsAsFactors = FALSE
)
data_parsed$pCutoff   <- as.numeric(data_parsed$pCutoff)
data_parsed$fcCutoff  <- as.numeric(data_parsed$fcCutoff)
data_parsed$padLength <- as.integer(data_parsed$padLength)
head(data_parsed)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 50000 & fcCutoff == 2)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
dev.off()
library(ggpubr)
library(dplyr)
library(tidyr)
data <- read.csv("summary.overlaps.txt", header=FALSE, sep="\t")
data <- data %>% select(c("V2", "V3", "V9", "V10", "V11"))
colnames(data) <- c("Filename1", "Filename2", "Enrich", "pEnrich", "pDeplete")
data$log2Enrich <- log2(data$Enrich)
parsed <- do.call(rbind, strsplit(as.character(data$Filename1), split = "\\."))
data_parsed <- data.frame(
pCutoff   = parsed[, 2],
direction = parsed[, 4],
fcCutoff  = parsed[, 5],
padLength = parsed[, 6],
stringsAsFactors = FALSE
)
data_parsed$pCutoff   <- as.numeric(data_parsed$pCutoff)
data_parsed$fcCutoff  <- as.numeric(data_parsed$fcCutoff)
data_parsed$padLength <- as.integer(data_parsed$padLength)
head(data_parsed)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 50000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 5000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
data <- read.csv("summary.overlaps.txt", header=FALSE, sep="\t")
data <- data %>% select(c("V2", "V3", "V9", "V10", "V11"))
colnames(data) <- c("Filename1", "Filename2", "Enrich", "pEnrich", "pDeplete")
data$log2Enrich <- log2(data$Enrich)
parsed <- do.call(rbind, strsplit(as.character(data$Filename1), split = "\\."))
data_parsed <- data.frame(
pCutoff   = parsed[, 2],
direction = parsed[, 4],
fcCutoff  = parsed[, 5],
padLength = parsed[, 6],
stringsAsFactors = FALSE
)
data_parsed$pCutoff   <- as.numeric(data_parsed$pCutoff)
data_parsed$fcCutoff  <- as.numeric(data_parsed$fcCutoff)
data_parsed$padLength <- as.integer(data_parsed$padLength)
head(data_parsed)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 20000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 50000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 5000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 20000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
library(ggpubr)
library(dplyr)
library(tidyr)
data <- read.csv("summary.overlaps.txt", header=FALSE, sep="\t")
data <- data %>% select(c("V2", "V3", "V9", "V10", "V11"))
colnames(data) <- c("Filename1", "Filename2", "Enrich", "pEnrich", "pDeplete")
data$log2Enrich <- log2(data$Enrich)
parsed <- do.call(rbind, strsplit(as.character(data$Filename1), split = "\\."))
data_parsed <- data.frame(
pCutoff   = parsed[, 2],
direction = parsed[, 4],
fcCutoff  = parsed[, 5],
padLength = parsed[, 6],
stringsAsFactors = FALSE
)
data_parsed$pCutoff   <- as.numeric(data_parsed$pCutoff)
data_parsed$fcCutoff  <- as.numeric(data_parsed$fcCutoff)
data_parsed$padLength <- as.integer(data_parsed$padLength)
head(data_parsed)
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 20000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggscatter(final_data, "log2Enrich", "minusLogPAdj", color="Filename2", label="Filename1")
ggscatter(final_data, "padLength", "minusLogPAdj", color="log2Enrich", facet.by="direction")
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
pdf("degBalloonPlot.pdf", height=3, width=4)
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
dev.off()
final_data <- cbind(data, data_parsed) %>% subset(pCutoff == 3 & padLength == 50000 & fcCutoff == 2)
final_data$pAdj <- p.adjust(pmin(final_data$pEnrich, final_data$pDeplete))
final_data$minusLogPAdj <- -log10(final_data$pAdj)
ggscatter(final_data, "log2Enrich", "minusLogPAdj", color="Filename2", label="Filename1")
ggscatter(final_data, "padLength", "minusLogPAdj", color="log2Enrich", facet.by="direction")
ggballoonplot(final_data, x="Filename2", y="direction", fill="log2Enrich", size="minusLogPAdj") +
theme_classic() +
scale_fill_gradient2(low="blue", mid="white", high="red", midpoint = 0) +
labs(
x="",
y="Human/Great Ape DEG Direction"
)
data
data
final_data
