)
)
# Reorder matrix and reshape
mat <- mat[manual_order, , drop = FALSE]
data_long <- as.data.frame(mat) %>%
mutate(haplotype = rownames(mat)) %>%
pivot_longer(
cols = -haplotype,
names_to = "position",
values_to = "accessibility"
) %>%
left_join(group_assignments, by = "haplotype") %>%
mutate(
position = as.numeric(gsub("V", "", position)),
center = (max(position) + min(position)) / 2,
position = position - center
)
# Ensure factor ordering
data_long$haplotype <- factor(data_long$haplotype, levels = manual_order)
# Generate and return plot
p <- ggplot(data_long, aes(x = position, y = accessibility, group = haplotype, fill = group)) +
geom_area(alpha = 1) +
facet_wrap(~ haplotype, ncol = 1, strip.position = "right") +
scale_fill_manual(
values = c("Modern Human" = "#F4A361", "Archaic Hominin" = "#EAC466", "Great Ape" = "#27A092")
) +
theme_minimal() +
theme(
strip.text.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid = element_blank(),
legend.position = "none"
) +
labs(
x = "Distance from Peak Center",
y = paste("Predicted Accessibility (", biosample, ")", sep=""),
title = coords,
subtitle = paste("Contacting", gene, sep="")
)
return(p)
}
plot_haplotype_accessibility <- function(filename, gene = "") {
data <- read.csv(filename, header=FALSE, sep="\t")
fname <- basename(filename)
# Remove extension and split
parts <- strsplit(fname, "\\.")[[1]]
biosample <- parts[1]
coords <- paste(parts[2:4], collapse = ".")
# Extract haplotypes and convert to matrix
haplotypes <- data$V1
data <- select(data, -c(V1))
mat <- as.matrix(data)
rownames(mat) <- haplotypes
# Define manual order and group assignments
manual_order <- c(
"NA18858.A", "NA18858.B", "NA20517.A", "NA20517.B", "HG00525.A", "HG00525.B",
"HG02615.A", "HG02615.B", "HG03079.A", "HG03079.B",
"vindija.neanderthal.A", "vindija.neanderthal.B",
"chagyrskaya.neanderthal.A", "chagyrskaya.neanderthal.B",
"altai.Neanderthal.A", "altai.Neanderthal.B", "denisova.A", "denisova.B",
"clara.panTroTro.A", "clara.panTroTro.B", "jimmie.panTroVerus.A", "jimmie.panTroVerus.B",
"taweh.panTroEllioti.A", "taweh.panTroEllioti.B",
"nakuu.panTroSchweinfurthii.A", "nakuu.panTroSchweinfurthii.B",
"natalie.panPaniscus.A", "natalie.panPaniscus.B",
"dian.gorGorGor.A", "dian.gorGorGor.B", "victoria.gorBeringeiGraueri.A", "victoria.gorBeringeiGraueri.B",
"dunja.ponAbe.A", "dunja.ponAbe.B"
)
group_assignments <- data.frame(
haplotype = manual_order,
group = c(
rep("Modern Human", 10),
rep("Archaic Hominin", 8),
rep("Great Ape", 16)
)
)
# Reorder matrix and reshape
mat <- mat[manual_order, , drop = FALSE]
data_long <- as.data.frame(mat) %>%
mutate(haplotype = rownames(mat)) %>%
pivot_longer(
cols = -haplotype,
names_to = "position",
values_to = "accessibility"
) %>%
left_join(group_assignments, by = "haplotype") %>%
mutate(
position = as.numeric(gsub("V", "", position)),
center = (max(position) + min(position)) / 2,
position = position - center
)
# Ensure factor ordering
data_long$haplotype <- factor(data_long$haplotype, levels = manual_order)
# Generate and return plot
p <- ggplot(data_long, aes(x = position, y = accessibility, group = haplotype, fill = group)) +
geom_area(alpha = 1) +
facet_wrap(~ haplotype, ncol = 1, strip.position = "right") +
scale_fill_manual(
values = c("Modern Human" = "#F4A361", "Archaic Hominin" = "#EAC466", "Great Ape" = "#27A092")
) +
theme_minimal() +
theme(
strip.text.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid = element_blank(),
legend.position = "none"
) +
labs(
x = "Distance from Peak Center",
y = paste("Predicted Accessibility (", biosample, ")", sep=""),
title = coords,
subtitle = paste("Contacting", gene, sep="")
)
return(p)
}
pCACNA1E <- plot_haplotype_accessibility("input/brain_male_embryo_105_days.chr1.181149614.181150164.txt", "CACNA1E")
pCACNA1E
png("image/CACNA1E.png", height=8,width=4)
CACNA1E
dev.off()
CACNA1E <- plot_haplotype_accessibility("input/brain_male_embryo_105_days.chr1.181149614.181150164.txt", "CACNA1E")
png("image/CACNA1E.png", height=8,width=4)
CACNA1E
dev.off()
png("image/CACNA1E.png", height=8,width=4, units = "in", res = 300)
CACNA1E
plot_haplotype_accessibility <- function(filename, gene = "") {
data <- read.csv(filename, header=FALSE, sep="\t")
fname <- basename(filename)
# Remove extension and split
parts <- strsplit(fname, "\\.")[[1]]
biosample <- parts[1]
coords <- paste(parts[2:4], collapse = ".")
# Extract haplotypes and convert to matrix
haplotypes <- data$V1
data <- select(data, -c(V1))
mat <- as.matrix(data)
rownames(mat) <- haplotypes
# Define manual order and group assignments
manual_order <- c(
"NA18858.A", "NA18858.B", "NA20517.A", "NA20517.B", "HG00525.A", "HG00525.B",
"HG02615.A", "HG02615.B", "HG03079.A", "HG03079.B",
"vindija.neanderthal.A", "vindija.neanderthal.B",
"chagyrskaya.neanderthal.A", "chagyrskaya.neanderthal.B",
"altai.Neanderthal.A", "altai.Neanderthal.B", "denisova.A", "denisova.B",
"clara.panTroTro.A", "clara.panTroTro.B", "jimmie.panTroVerus.A", "jimmie.panTroVerus.B",
"taweh.panTroEllioti.A", "taweh.panTroEllioti.B",
"nakuu.panTroSchweinfurthii.A", "nakuu.panTroSchweinfurthii.B",
"natalie.panPaniscus.A", "natalie.panPaniscus.B",
"dian.gorGorGor.A", "dian.gorGorGor.B", "victoria.gorBeringeiGraueri.A", "victoria.gorBeringeiGraueri.B",
"dunja.ponAbe.A", "dunja.ponAbe.B"
)
group_assignments <- data.frame(
haplotype = manual_order,
group = c(
rep("Modern Human", 10),
rep("Archaic Hominin", 8),
rep("Great Ape", 16)
)
)
# Reorder matrix and reshape
mat <- mat[manual_order, , drop = FALSE]
data_long <- as.data.frame(mat) %>%
mutate(haplotype = rownames(mat)) %>%
pivot_longer(
cols = -haplotype,
names_to = "position",
values_to = "accessibility"
) %>%
left_join(group_assignments, by = "haplotype") %>%
mutate(
position = as.numeric(gsub("V", "", position)),
center = (max(position) + min(position)) / 2,
position = position - center
)
# Ensure factor ordering
data_long$haplotype <- factor(data_long$haplotype, levels = manual_order)
# Generate and return plot
p <- ggplot(data_long, aes(x = position, y = accessibility, group = haplotype, fill = group)) +
geom_area(alpha = 1) +
facet_wrap(~ haplotype, ncol = 1, strip.position = "right") +
scale_fill_manual(
values = c("Modern Human" = "#F4A361", "Archaic Hominin" = "#EAC466", "Great Ape" = "#27A092")
) +
theme_minimal() +
theme(
strip.text.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid = element_blank(),
legend.position = "none"
) +
labs(
x = "Distance from Peak Center",
y = paste("Predicted Accessibility (", biosample, ")", sep=""),
title = coords,
subtitle = paste("Contacting ", gene, sep="")
)
return(p)
}
CACNA1E <- plot_haplotype_accessibility("input/brain_male_embryo_105_days.chr1.181149614.181150164.txt", "CACNA1E")
png("image/CACNA1E.png", height=8,width=4, units = "in", res = 300)
CACNA1E
dev.off()
RUNX3 <- plot_haplotype_accessibility("input/astrocyte_of_the_spinal_cord.chr1.25233238.25233573.txt", "RUNX3")
EIF2AK4 <- plot_haplotype_accessibility("input/astrocyte_of_the_spinal_cord.chr15.40266842.40267256.txt", "EIF2AK4")
QKI <- plot_haplotype_accessibility("input/brain_female_embryo_142_days.chr6.163756163.163756509.txt", "QKI")
LIMK1 <- plot_haplotype_accessibility("input/brain_female_embryo_142_days.chr7.73301069.73301609.txt", "LIMK1")
CACNA1E <- plot_haplotype_accessibility("input/brain_male_embryo_105_days.chr1.181149614.181150164.txt", "CACNA1E")
MAP2K7 <- plot_haplotype_accessibility("input/brain_male_embryo_105_days.chr19.7743373.7744052.txt", "MAP2K7")
NEDD9 <- plot_haplotype_accessibility("input/brain_male_embryo_105_days.chr6.11236447.11236874.txt", "NEDD9")
GRIN3B <- plot_haplotype_accessibility("input/cerebellum_male_adult_27_years_35_years.chr19.1795882.1796497.txt", "GRIN3B")
ARID1A <- plot_haplotype_accessibility("input/medulloblastoma.chr1.27111990.27112633.txt", "ARID1A")
AXIN2 <- plot_haplotype_accessibility("input/medulloblastoma.chr17.63433753.63434255.txt", "AXIN2")
png("image/RUNX3.png", width = 4, height = 8, units = "in", res = 300)
print(RUNX3)
dev.off()
png("image/EIF2AK4.png", width = 4, height = 8, units = "in", res = 300)
print(EIF2AK4)
dev.off()
png("image/QKI.png", width = 4, height = 8, units = "in", res = 300)
print(QKI)
dev.off()
png("image/LIMK1.png", width = 4, height = 8, units = "in", res = 300)
print(LIMK1)
dev.off()
png("image/CACNA1E.png", width = 4, height = 8, units = "in", res = 300)
print(CACNA1E)
dev.off()
png("image/MAP2K7.png", width = 4, height = 8, units = "in", res = 300)
print(MAP2K7)
dev.off()
png("image/NEDD9.png", width = 4, height = 8, units = "in", res = 300)
print(NEDD9)
dev.off()
png("image/GRIN3B.png", width = 4, height = 8, units = "in", res = 300)
print(GRIN3B)
dev.off()
png("image/ARID1A.png", width = 4, height = 8, units = "in", res = 300)
print(ARID1A)
dev.off()
png("image/AXIN2.png", width = 4, height = 8, units = "in", res = 300)
print(AXIN2)
dev.off()
library(ggpubr)
library(tidyr)
library(dplyr)
library(pheatmap)
plot_haplotype_accessibility <- function(filename, gene = "") {
data <- read.csv(filename, header=FALSE, sep="\t")
fname <- basename(filename)
# Remove extension and split
parts <- strsplit(fname, "\\.")[[1]]
biosample <- parts[1]
coords <- paste(parts[2:4], collapse = ".")
# Extract haplotypes and convert to matrix
haplotypes <- data$V1
data <- select(data, -c(V1))
mat <- as.matrix(data)
rownames(mat) <- haplotypes
# Define manual order and group assignments
manual_order <- c(
"NA18858.A", "NA18858.B", "NA20517.A", "NA20517.B", "HG00525.A", "HG00525.B",
"HG02615.A", "HG02615.B", "HG03079.A", "HG03079.B",
"vindija.neanderthal.A", "vindija.neanderthal.B",
"chagyrskaya.neanderthal.A", "chagyrskaya.neanderthal.B",
"altai.Neanderthal.A", "altai.Neanderthal.B", "denisova.A", "denisova.B",
"clara.panTroTro.A", "clara.panTroTro.B", "jimmie.panTroVerus.A", "jimmie.panTroVerus.B",
"taweh.panTroEllioti.A", "taweh.panTroEllioti.B",
"nakuu.panTroSchweinfurthii.A", "nakuu.panTroSchweinfurthii.B",
"natalie.panPaniscus.A", "natalie.panPaniscus.B",
"dian.gorGorGor.A", "dian.gorGorGor.B", "victoria.gorBeringeiGraueri.A", "victoria.gorBeringeiGraueri.B",
"dunja.ponAbe.A", "dunja.ponAbe.B"
)
group_assignments <- data.frame(
haplotype = manual_order,
group = c(
rep("Modern Human", 10),
rep("Archaic Hominin", 8),
rep("Great Ape", 16)
)
)
# Reorder matrix and reshape
mat <- mat[manual_order, , drop = FALSE]
data_long <- as.data.frame(mat) %>%
mutate(haplotype = rownames(mat)) %>%
pivot_longer(
cols = -haplotype,
names_to = "position",
values_to = "accessibility"
) %>%
left_join(group_assignments, by = "haplotype") %>%
mutate(
position = as.numeric(gsub("V", "", position)),
center = (max(position) + min(position)) / 2,
position = position - center
)
# Ensure factor ordering
data_long$haplotype <- factor(data_long$haplotype, levels = manual_order)
# Generate and return plot
p <- ggplot(data_long, aes(x = position, y = accessibility, group = haplotype, fill = group)) +
geom_area(alpha = 1) +
facet_wrap(~ haplotype, ncol = 1, strip.position = "right") +
scale_fill_manual(
values = c("Modern Human" = "#F4A361", "Archaic Hominin" = "#EAC466", "Great Ape" = "#27A092")
) +
theme_minimal() +
theme(
strip.text.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid = element_blank(),
legend.position = "none"
) +
labs(
x = "Distance from Peak Center",
y = paste("Predicted Accessibility (", biosample, ")", sep=""),
title = coords,
subtitle = paste("Contacting ", gene, sep="")
)
return(p)
}
KNL1 <- plot_haplotype_accessibility("input/astrocyte_of_the_spinal_cord.chr15.40266842.40267256.txt", "KNL1")
KNL1
png("image/KNL1.png", width=4, height=8, units = "in", res = 300)
print(KNL1)
KNL1 <- plot_haplotype_accessibility("input/astrocyte_of_the_spinal_cord.chr15.40266842.40267256.txt", "KNL1")
png("image/KNL1.png", width=4, height=8, units = "in", res = 300)
print(KNL1)
dev.off()
plot_haplotype_accessibility <- function(filename, gene = "") {
data <- read.csv(filename, header=FALSE, sep="\t")
fname <- basename(filename)
# Remove extension and split
parts <- strsplit(fname, "\\.")[[1]]
biosample <- parts[1]
coords <- paste(parts[2:4], collapse = ".")
# Extract haplotypes and convert to matrix
haplotypes <- data$V1
data <- select(data, -c(V1))
mat <- as.matrix(data)
rownames(mat) <- haplotypes
# Define manual order and group assignments
manual_order <- c(
"HG02615.A", "HG02615.B",
"NA18858.A", "NA18858.B",
"HG00525.A", "HG00525.B",
"HG03079.A", "HG03079.B",
"NA20517.A", "NA20517.B",
"vindija.neanderthal.A", "vindija.neanderthal.B",
"chagyrskaya.neanderthal.A", "chagyrskaya.neanderthal.B",
"altai.Neanderthal.A", "altai.Neanderthal.B", "denisova.A", "denisova.B",
"clara.panTroTro.A", "clara.panTroTro.B", "jimmie.panTroVerus.A", "jimmie.panTroVerus.B",
"taweh.panTroEllioti.A", "taweh.panTroEllioti.B",
"nakuu.panTroSchweinfurthii.A", "nakuu.panTroSchweinfurthii.B",
"natalie.panPaniscus.A", "natalie.panPaniscus.B",
"dian.gorGorGor.A", "dian.gorGorGor.B", "victoria.gorBeringeiGraueri.A", "victoria.gorBeringeiGraueri.B",
"dunja.ponAbe.A", "dunja.ponAbe.B"
)
group_assignments <- data.frame(
haplotype = manual_order,
group = c(
rep("Modern Human", 10),
rep("Archaic Hominin", 8),
rep("Great Ape", 16)
)
)
# Reorder matrix and reshape
mat <- mat[manual_order, , drop = FALSE]
data_long <- as.data.frame(mat) %>%
mutate(haplotype = rownames(mat)) %>%
pivot_longer(
cols = -haplotype,
names_to = "position",
values_to = "accessibility"
) %>%
left_join(group_assignments, by = "haplotype") %>%
mutate(
position = as.numeric(gsub("V", "", position)),
center = (max(position) + min(position)) / 2,
position = position - center
)
# Ensure factor ordering
data_long$haplotype <- factor(data_long$haplotype, levels = manual_order)
# Generate and return plot
p <- ggplot(data_long, aes(x = position, y = accessibility, group = haplotype, fill = group)) +
geom_area(alpha = 1) +
facet_wrap(~ haplotype, ncol = 1, strip.position = "right") +
scale_fill_manual(
values = c("Modern Human" = "#F4A361", "Archaic Hominin" = "#EAC466", "Great Ape" = "#27A092")
) +
theme_minimal() +
theme(
strip.text.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid = element_blank(),
legend.position = "none"
) +
labs(
x = "Distance from Peak Center",
y = paste("Predicted Accessibility (", biosample, ")", sep=""),
title = coords,
subtitle = paste("Contacting ", gene, sep="")
)
return(p)
}
png("image/KNL1.png", width=4, height=8, units = "in", res = 300)
print(KNL1)
dev.off()
KNL1 <- plot_haplotype_accessibility("input/astrocyte_of_the_spinal_cord.chr15.40266842.40267256.txt", "KNL1")
png("image/KNL1.png", width=4, height=8, units = "in", res = 300)
print(KNL1)
dev.off()
GRIN3B <- plot_haplotype_accessibility("input/cerebellum_male_adult_27_years_35_years.chr19.1795882.1796497.txt", "GRIN3B")
png("image/GRIN3B.png", width = 4, height = 8, units = "in", res = 300)
print(GRIN3B)
dev.off()
library(ggpubr)
library(tidyr)
library(dplyr)
library(pheatmap)
plot_haplotype_accessibility <- function(filename, gene = "") {
data <- read.csv(filename, header=FALSE, sep="\t")
fname <- basename(filename)
# Remove extension and split
parts <- strsplit(fname, "\\.")[[1]]
biosample <- parts[1]
coords <- paste(parts[2:4], collapse = ".")
# Extract haplotypes and convert to matrix
haplotypes <- data$V1
data <- select(data, -c(V1))
mat <- as.matrix(data)
rownames(mat) <- haplotypes
# Define manual order and group assignments
manual_order <- c(
"HG02615.A", "HG02615.B",
"NA18858.A", "NA18858.B",
"HG00525.A", "HG00525.B",
"HG03079.A", "HG03079.B",
"NA20517.A", "NA20517.B",
"vindija.neanderthal.A", "vindija.neanderthal.B",
"chagyrskaya.neanderthal.A", "chagyrskaya.neanderthal.B",
"altai.Neanderthal.A", "altai.Neanderthal.B", "denisova.A", "denisova.B",
"clara.panTroTro.A", "clara.panTroTro.B", "jimmie.panTroVerus.A", "jimmie.panTroVerus.B",
"taweh.panTroEllioti.A", "taweh.panTroEllioti.B",
"nakuu.panTroSchweinfurthii.A", "nakuu.panTroSchweinfurthii.B",
"natalie.panPaniscus.A", "natalie.panPaniscus.B",
"dian.gorGorGor.A", "dian.gorGorGor.B", "victoria.gorBeringeiGraueri.A", "victoria.gorBeringeiGraueri.B",
"dunja.ponAbe.A", "dunja.ponAbe.B"
)
group_assignments <- data.frame(
haplotype = manual_order,
group = c(
rep("Modern Human", 10),
rep("Archaic Hominin", 8),
rep("Great Ape", 16)
)
)
# Reorder matrix and reshape
mat <- mat[manual_order, , drop = FALSE]
data_long <- as.data.frame(mat) %>%
mutate(haplotype = rownames(mat)) %>%
pivot_longer(
cols = -haplotype,
names_to = "position",
values_to = "accessibility"
) %>%
left_join(group_assignments, by = "haplotype") %>%
mutate(
position = as.numeric(gsub("V", "", position)),
center = (max(position) + min(position)) / 2,
position = position - center
)
# Ensure factor ordering
data_long$haplotype <- factor(data_long$haplotype, levels = manual_order)
# Generate and return plot
p <- ggplot(data_long, aes(x = position, y = accessibility, group = haplotype, fill = group)) +
geom_area(alpha = 1) +
facet_wrap(~ haplotype, ncol = 1, strip.position = "right") +
scale_fill_manual(
values = c("Modern Human" = "#F4A361", "Archaic Hominin" = "#EAC466", "Great Ape" = "#27A092")
) +
theme_minimal() +
theme(
strip.text.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid = element_blank(),
legend.position = "none"
) +
labs(
x = "Distance from Peak Center",
y = paste("Predicted Accessibility (", biosample, ")", sep=""),
title = coords,
subtitle = paste("Contacting ", gene, sep="")
)
return(p)
}
CACNA1C <- plot_haplotype_accessibility("input/brain_male_embryo_105_days.chr12.1933407.1934070.txt", "CACNA1C")
png("image/CACNA1C.png", width=4, height=8, units = "in", res=300)
print(CACNA1C)
dev.off()
GRID1 <- plot_haplotype_accessibility("input/brain_male_embryo_105_days.chr10.86261934.86262389.txt", "GRID1")
png("image/GRID1.png", width=4, height=8, units = "in", res=300)
print(GRID1)
dev.off()
GABRA5 <- plot_haplotype_accessibility("input/astrocyte_of_the_spinal_cord.chr15.26667714.26668063.txt", "GABRA5")
png("image/GABRA5.png", width=4, height=8, units = "in", res=300)
print(GABRA5)
dev.off()
